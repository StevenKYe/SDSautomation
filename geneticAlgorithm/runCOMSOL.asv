% Run Comsol server with this command:
% "C:\Program Files\COMSOL\COMSOL56\Multiphysics\bin\win64\comsolmphserver.exe" -port 12345 -autosave off
% MATLAB function to run the COMSOL model with certain parameters once

function maxGain = runCOMSOL(geom)
    %myFun - Description
    %
    % Syntax: maxGain = runCOMSOL(geom)
    % Geometry configuration example:
    % geom.w = 4200; % Width of the chip
    % geom.tint = 450; % Seperation between the two stripes
    % geom.tintup = 250; % Distance from the bottom boundary of the upper stripe to the center of the chip, unit: nm
    % geom.tg = 180; % Thickness of the stripe, unit: nm

    format long;

    model = mphload('..\nlnp2021stevenSDS(formatlab).mph');
    % Clean up all solution data
    model.sol('sol1').clearSolutionData();
    model.sol('sol2').clearSolutionData();
    model.sol('sol3').clearSolutionData();

    % Config the COMSOL model and trial run the optical model
    model = configParas(model, geom);
    model.param.set('freqAcous', [num2str(13.5) ' [GHz]']);
    fprintf('Configurations of the running model\n');
    fprintf(['Width: ' num2str(geom.w) ' nm\t' 'Distance to center: ' num2str(geom.tg + geom.tint) ' nm\t' 'Thickness: ' num2str(geom.tg) ' nm\n']);
    fprintf(['Seperation: ' num2str(geom.tint) ' nm\t' 'Top cladding thickness: ' num2str(geom.tc * 1000) ' nm\n\n']);
    model.study('std1').run();

    % Croase sweeping
    [k0, k1, k2] = deal(0, 0, 0);

    for i = 1:9
        freqAcous = 14.0 - 0.25 * i;
        model.param.set('freqAcous', [num2str(freqAcous) ' [GHz]']);
        model.study('std2').run();
        coarseGain = mphglobal(model, 'SBSgain', 'dataset', 'dset4');
        fprintf(['SBSgain @' num2str(freqAcous) 'GHz is ' num2str(coarseGain) '\n']);

        if mod(i, 3) == 0
            k0 = coarseGain;
        elseif mod(i, 3) == 1
            k1 = coarseGain;
        elseif mod(i, 3) == 2
            k2 = coarseGain;
        end

        if (mod(i, 3) == 2) && (k1 > k0) && (k1 > k2)
            freqCenter = freqAcous + 0.25;
            gainCenter = k1;
            break;
        end

    end

    fprintf(['Maximum gain is around ' num2str(freqCenter) 'GHz\n']);

    % Fine sweeping
    freqSpan = [linspace(freqCenter + 0.05, freqCenter + 0.01, 5), freqCenter, linspace(freqCenter - 0.01, freqCenter - 0.05, 5)];
    SBSgain = [zeros(1, 5), gainCenter, zeros(1, 5)];
    maxGain.gain = 0;
    maxGain.freq = 0;

    for i = 1:length(freqSpan)

        if i == 5
            SBSgain(i) = gainCenter;
        else
            freqAcous = freqSpan(i);
            model.param.set('freqAcous', [num2str(freqAcous) ' [GHz]']);
            model.study('std2').run();
            SBSgain(i) = mphglobal(model, 'SBSgain', 'dataset', 'dset4');
            fprintf(['SBSgain @' num2str(freqAcous) 'GHz is ' num2str(SBSgain(i)) '\n']);
        end

        % Store the maximum gain and the corresponding frequency
        if (mod(i, 3) == 2) && (SBSgain(i - 1) > SBSgain(i - 2)) && (SBSgain(i - 1) > SBSgain(i))
            maxGain.gain = SBSgain(i - 1);
            maxGain.freq = freqSpan(i - 1);
            fprintf(['The maximum gain (until now) for this model is ' num2str(maxGain.gain) ' @ ' num2str(maxGain.freq) ' GHz\n']);
            break;
        end

    end

    writematrix([freqSpan.', SBSgain.'], ['results\frequencySweep\w' num2str(geom.w) '_tint' num2str(geom.tint) '_tg' num2str(geom.tg) '_tc' num2str(geom.tc * 1000) '.csv']);
    clear model;
end


